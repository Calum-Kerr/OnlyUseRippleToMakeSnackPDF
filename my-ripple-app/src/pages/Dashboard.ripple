import { useAuth } from '../utils/auth.context';
import { useSubscription } from '../utils/subscription.context';
// @ts-expect-error: Ripple component import
import { SubscriptionStatus } from '../components/Subscription/SubscriptionStatus.ripple';
// @ts-expect-error: Ripple component import
import { SubscriptionButton } from '../components/Subscription/SubscriptionButton.ripple';

export component Dashboard() {
  const auth = useAuth();
  const subscription = useSubscription();

  const getGreeting = () => {
    const hour = new Date().getHours();
    if (hour < 12) return 'Good morning';
    if (hour < 18) return 'Good afternoon';
    return 'Good evening';
  };

  <div class="dashboard-page">
    <div class="dashboard-header">
      <h1 class="page-title">
        {getGreeting()}
        if (@auth.user?.name) {
          {', '}
          {@auth.user.name}
        }
        {'!'}
      </h1>
      <p class="page-subtitle">
        {'Welcome to SnackPDF - Your locally hosted one-stop-shop for all your PDF needs'}
      </p>
    </div>

    <div class="dashboard-content">
      <div class="dashboard-grid">
        <div class="dashboard-card">
          <h2 class="card-title">{'Your Subscription'}</h2>
          <SubscriptionStatus />
          if (!@subscription.isSubscribed) {
            <div class="card-action">
              <SubscriptionButton />
            </div>
          }
        </div>

        <div class="dashboard-card">
          <h2 class="card-title">{'Quick Actions'}</h2>
          <div class="quick-actions">
            <button class="action-button">
              <span class="action-icon">{'üìÅ'}</span>
              <span class="action-text">{'Organise PDFs'}</span>
            </button>
            <button class="action-button">
              <span class="action-icon">{'üìÑ'}</span>
              <span class="action-text">{'Convert to PDF'}</span>
            </button>
            <button class="action-button">
              <span class="action-icon">{'üîÑ'}</span>
              <span class="action-text">{'Convert from PDF'}</span>
            </button>
            <button class="action-button">
              <span class="action-icon">{'üîí'}</span>
              <span class="action-text">{'Sign & Secure'}</span>
            </button>
          </div>
        </div>

        <div class="dashboard-card">
          <h2 class="card-title">{'Getting Started'}</h2>
          <div class="getting-started">
            <p class="info-text">
              {'SnackPDF provides a comprehensive suite of PDF manipulation tools. All processing happens locally in your browser for maximum privacy and security.'}
            </p>
            <ul class="feature-list">
              <li>{'‚úì Organise and merge PDFs'}</li>
              <li>{'‚úì Convert documents to and from PDF'}</li>
              <li>{'‚úì Sign and secure your documents'}</li>
              <li>{'‚úì View and edit PDF content'}</li>
              <li>{'‚úì Advanced PDF operations'}</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>

  <style>
    .dashboard-page {
      width: 100%;
      max-width: 1400px;
      margin: 0 auto;
    }

    .dashboard-header {
      margin-bottom: var(--spacing-2xl);
    }

    .page-title {
      font-size: var(--font-size-3xl);
      font-weight: var(--font-weight-bold);
      color: var(--color-text-primary);
      margin: 0 0 var(--spacing-sm) 0;
    }

    .page-subtitle {
      font-size: var(--font-size-base);
      color: var(--color-text-secondary);
      margin: 0;
    }

    .dashboard-content {
      width: 100%;
    }

    .dashboard-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: var(--spacing-xl);
    }

    .dashboard-card {
      background-color: var(--brand-white);
      border: 1px solid var(--color-border-medium);
      border-radius: var(--radius-lg);
      padding: var(--spacing-xl);
      box-shadow: var(--shadow-sm);
    }

    .card-title {
      font-size: var(--font-size-xl);
      font-weight: var(--font-weight-bold);
      color: var(--color-text-primary);
      margin: 0 0 var(--spacing-lg) 0;
    }

    .card-action {
      margin-top: var(--spacing-lg);
      padding-top: var(--spacing-lg);
      border-top: 1px solid var(--color-border-light);
    }

    .quick-actions {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: var(--spacing-md);
    }

    .action-button {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: var(--spacing-sm);
      padding: var(--spacing-lg);
      background-color: var(--color-bg-secondary);
      border: 1px solid var(--color-border-light);
      border-radius: var(--radius-md);
      cursor: pointer;
      transition: all var(--transition-fast);
    }

    .action-button:hover {
      background-color: var(--brand-white);
      border-color: var(--brand-green);
      transform: translateY(-2px);
      box-shadow: var(--shadow-md);
    }

    .action-icon {
      font-size: var(--font-size-3xl);
    }

    .action-text {
      font-size: var(--font-size-sm);
      font-weight: var(--font-weight-medium);
      color: var(--color-text-primary);
      text-align: center;
    }

    .getting-started {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-md);
    }

    .info-text {
      font-size: var(--font-size-sm);
      color: var(--color-text-secondary);
      line-height: var(--line-height-relaxed);
      margin: 0;
    }

    .feature-list {
      list-style: none;
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: column;
      gap: var(--spacing-xs);
    }

    .feature-list li {
      font-size: var(--font-size-sm);
      color: var(--color-text-secondary);
    }

    @media (max-width: 768px) {
      .dashboard-grid {
        grid-template-columns: 1fr;
      }

      .quick-actions {
        grid-template-columns: 1fr;
      }
    }
  </style>
}

